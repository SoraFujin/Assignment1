<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".AnalysisAlgo">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="156dp"
        android:layout_height="127dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.109"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.014"
        app:srcCompat="@mipmap/ic_launcher_analysis_algo" />

    <TextView
        android:id="@+id/sortalgo_text"
        android:layout_width="342dp"
        android:layout_height="103dp"
        android:text="Algorithm analysis is the process of evaluating the performance of an algorithm, usually in terms of its time and space complexity. There are several ways to analyze the performance of an algorithm, including asymptotic analysis, which analyzes the behavior of an algorithm as the size of the input grows indefinitely."
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.492"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.216" />

    <ImageView
        android:id="@+id/insertion_sort"
        android:layout_width="141dp"
        android:layout_height="81dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.766"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.083"
        app:srcCompat="@drawable/what" />

    <ImageView
        android:id="@+id/quick_sort"
        android:layout_width="136dp"
        android:layout_height="126dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.003"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.864"
        app:srcCompat="@drawable/asym" />

    <TextView
        android:id="@+id/insertion_sort_text"
        android:layout_width="323dp"
        android:layout_height="101dp"
        android:text="What are the stages of algorithm analysis? \n
In general, algorithm analysis can be broken down into the following three steps. First step, determine the input size; next identify the critical operations and last analyze the performance."
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.404"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.397" />

    <TextView
        android:id="@+id/quick_sort_text"
        android:layout_width="340dp"
        android:layout_height="134dp"
        android:text="How do you analyze an algorithm?\n
There are several ways to analyze the performance of an algorithm, including asymptotic analysis, which analyzes the behavior of an algorithm as the size of the input grows indefinitely. Another way to analyze algorithms is through experimental analysis, which involves running the algorithm on a set of inputs and measuring its actual performance."
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.382"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.597" />

    <TextView
        android:id="@+id/merge_sort_text"
        android:layout_width="225dp"
        android:layout_height="166dp"
        android:text="Asymptotic Notations are mathematical tools used to analyze the performance of algorithms by understanding how their efficiency changes as the input size grows.
These notations provide a concise way to express the behavior of an algorithmâ€™s time or space complexity as the input size approaches infinity."
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.785"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.881" />

</androidx.constraintlayout.widget.ConstraintLayout>